[{"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\index.js":"1","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\App.js":"2","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\pages\\splash.js":"3","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\pages\\Globe.js":"4","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\markers.js":"5","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\Info.js":"6","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\News.js":"7","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\utils\\API.js":"8","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\Splashtext.js":"9","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\Search.js":"10","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\StateInfo.js":"11","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\CDC.js":"12","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\index.js":"13","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\App.js":"14","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\pages\\Globe.js":"15","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\markers.js":"16","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\Info.js":"17","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\Search.js":"18","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\News.js":"19","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\CDC.js":"20","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\utils\\API.js":"21","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\StateInfo.js":"22"},{"size":220,"mtime":1607714567784,"results":"23","hashOfConfig":"24"},{"size":411,"mtime":1607717349737,"results":"25","hashOfConfig":"24"},{"size":2297,"mtime":1607714567789,"results":"26","hashOfConfig":"24"},{"size":10558,"mtime":1608077008986,"results":"27","hashOfConfig":"24"},{"size":22068,"mtime":1607714567787,"results":"28","hashOfConfig":"24"},{"size":1091,"mtime":1608076747355,"results":"29","hashOfConfig":"24"},{"size":432,"mtime":1607793749354,"results":"30","hashOfConfig":"24"},{"size":1321,"mtime":1607874109655,"results":"31","hashOfConfig":"24"},{"size":691,"mtime":1607714567782,"results":"32","hashOfConfig":"24"},{"size":5738,"mtime":1607814157058,"results":"33","hashOfConfig":"24"},{"size":1119,"mtime":1608076747358,"results":"34","hashOfConfig":"24"},{"size":316,"mtime":1607874109647,"results":"35","hashOfConfig":"24"},{"size":220,"mtime":1612294177704,"results":"36","hashOfConfig":"37"},{"size":325,"mtime":1612295112154,"results":"38","hashOfConfig":"37"},{"size":10564,"mtime":1612295411375,"results":"39","hashOfConfig":"37"},{"size":22068,"mtime":1612294177708,"results":"40","hashOfConfig":"37"},{"size":1202,"mtime":1612295308610,"results":"41","hashOfConfig":"37"},{"size":5738,"mtime":1612294177687,"results":"42","hashOfConfig":"37"},{"size":432,"mtime":1612294177685,"results":"43","hashOfConfig":"37"},{"size":316,"mtime":1612294177681,"results":"44","hashOfConfig":"37"},{"size":1321,"mtime":1612294177716,"results":"45","hashOfConfig":"37"},{"size":1225,"mtime":1612295322358,"results":"46","hashOfConfig":"37"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"drjk05",{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"49"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"49"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"49"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"jiipf",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"78"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\index.js",[],["98","99"],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\App.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\pages\\splash.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\pages\\Globe.js",["100"],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\markers.js",["101"],"// export default [\n// Remove export at the bottom if this is added back in.\n\nexport default [\n  {\n    id: 1,\n    country: \"Aruba\",\n    coordinates: [12.5, -69.96666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 2,\n    country: \"Afghanistan\",\n    coordinates: [33, 65],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 3,\n    country: \"Anguilla\",\n    coordinates: [18.25, -63.16666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 4,\n    country: \"Albania\",\n    coordinates: [41, 20],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 5,\n    country: \"Andorra\",\n    coordinates: [42.5, 1.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 6,\n    country: \"UAE\",\n    coordinates: [24, 54],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 7,\n    country: \"Argentina\",\n    coordinates: [-34, -64],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 8,\n    country: \"Armenia\",\n    coordinates: [40, 45],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 9,\n    country: \"Antigua and Barbuda\",\n    coordinates: [17.05, -61.8],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 10,\n    country: \"Australia\",\n    coordinates: [-27, 133],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 11,\n    country: \"Austria\",\n    coordinates: [47.33333333, 13.33333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 12,\n    country: \"Azerbaijan\",\n    coordinates: [40.5, 47.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 13,\n    country: \"Burundi\",\n    coordinates: [-3.5, 30],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 14,\n    country: \"Belgium\",\n    coordinates: [50.83333333, 4],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 15,\n    country: \"Benin\",\n    coordinates: [9.5, 2.25],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 16,\n    country: \"Burkina Faso\",\n    coordinates: [13, -2],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 17,\n    country: \"Bangladesh\",\n    coordinates: [24, 90],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 18,\n    country: \"Bulgaria\",\n    coordinates: [43, 25],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 19,\n    country: \"Bahrain\",\n    coordinates: [26, 50.55],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 20,\n    country: \"Bahamas\",\n    coordinates: [24.25, -76],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 21,\n    country: \"Bosnia and Herzegovina\",\n    coordinates: [44, 18],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 22,\n    country: \"Belarus\",\n    coordinates: [53, 28],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 23,\n    country: \"Belize\",\n    coordinates: [17.25, -88.75],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 24,\n    country: \"Bermuda\",\n    coordinates: [32.33333333, -64.75],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 25,\n    country: \"Bolivia\",\n    coordinates: [ -17, -65],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 26,\n    country: \"Brazil\",\n    coordinates: [-10, -55],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 27,\n    country: \"Barbados\",\n    coordinates: [13.16666666, -59.53333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 28,\n    country: \"Brunei\",\n    coordinates: [4.5, 114.66666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 29,\n    country: \"Bhutan\",\n    coordinates: [ 27.5, 90.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 30,\n    country: \"Botswana\",\n    coordinates: [-22, 24],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 31,\n    country: \"Canada\",\n    coordinates: [60, -95],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 32,\n    country: \"Switzerland\",\n    coordinates: [47, 8],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 33,\n    country: \"Chile\",\n    coordinates: [ -30, -71],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 34,\n    country: \"China\",\n    coordinates: [35, 105],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 35,\n    country: \"Ivory Coast\",\n    coordinates: [8, -5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 36,\n    country: \"Cameroon\",\n    coordinates: [6, 12],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 37,\n    country: \"Congo\",\n    coordinates: [-1, 15],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 38,\n    country: \"Colombia\",\n    coordinates: [ 4, -72],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 39,\n    country: \"Comoros\",\n    coordinates: [ -12.16666666, 44.25],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 40,\n    country: \"Costa Rica\",\n    coordinates: [10, -84],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 41,\n    country: \"Cuba\",\n    coordinates: [21.5, -80],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 42,\n    country: \"Cayman Islands\",\n    coordinates: [ 19.5, -80.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 43,\n    country: \"Cyprus\",\n    coordinates: [35, 33],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 44,\n    country: \"Czechia\",\n    coordinates: [49.75, 15.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 45,\n    country: \"Germany\",\n    coordinates: [51, 9],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 46,\n    country: \"Djibouti\",\n    coordinates: [11.5, 43],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 47,\n    country: \"Dominica\",\n    coordinates: [15.41666666, -61.33333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 48,\n    country: \"Denmark\",\n    coordinates: [56, 10],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 49,\n    country: \"Dominican Republic\",\n    coordinates: [19, -70.66666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 50,\n    country: \"Algeria\",\n    coordinates: [28, 3],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 51,\n    country: \"Ecuador\",\n    coordinates: [ -2, -77.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 52,\n    country: \"Egypt\",\n    coordinates: [27, 30],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 53,\n    country: \"Western Sahara\",\n    coordinates: [24.5, -13],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 54,\n    country: \"Spain\",\n    coordinates: [40, -4],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 55,\n    country: \"Estonia\",\n    coordinates: [59, 26],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 56,\n    country: \"Ethiopia\",\n    coordinates: [8, 38],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 57,\n    country: \"Finland\",\n    coordinates: [64, 26],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 58,\n    country: \"Fiji\",\n    coordinates: [-18, 175],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 59,\n    country: \"Falkland Islands\",\n    coordinates: [-51.75, -59],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 60,\n    country: \"France\",\n    coordinates: [46, 2],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 61,\n    country: \"Gabon\",\n    coordinates: [-1, 11.75],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 62,\n    country: \"UK\",\n    coordinates: [54, -2],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 63,\n    country: \"Georgia\",\n    coordinates: [42, 43.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 64,\n    country: \"Ghana\",\n    coordinates: [8, -2],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 65,\n    country: \"Gibraltar\",\n    coordinates: [36.13333333, -5.35],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 66,\n    country: \"Guadeloupe\",\n    coordinates: [16.25, -61.583333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 67,\n    country: \"Gambia\",\n    coordinates: [13.46666666, -16.56666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 68,\n    country: \"Equatorial Guinea\",\n    coordinates: [2, 10],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 69,\n    country: \"Greece\",\n    coordinates: [39, 22],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 70,\n    country: \"Grenada\",\n    coordinates: [12.11666666, -61.66666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 71,\n    country: \"Greenland\",\n    coordinates: [72, -40],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 72,\n    country: \"Guatemala\",\n    coordinates: [15.5, -90.25],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 73,\n    country: \"Guyana\",\n    coordinates: [5, -59],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 74,\n    country: \"Hong Kong\",\n    coordinates: [22.267, 114.188],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 75,\n    country: \"Honduras\",\n    coordinates: [15, -86.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 76,\n    country: \"Croatia\",\n    coordinates: [45.16666666, 15.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 77,\n    country: \"Haiti\",\n    coordinates: [19, -72.41666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 78,\n    country: \"Hungary\",\n    coordinates: [47, 20],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 79,\n    country: \"Indonesia\",\n    coordinates: [ -5, 120],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 80,\n    country: \"Isle of Man\",\n    coordinates: [54.25, -4.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 91,\n    country: \"India\",\n    coordinates: [20, 77],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 92,\n    country: \"Ireland\",\n    coordinates: [53, -8],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 93,\n    country: \"Iran\",\n    coordinates: [32, 53],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 94,\n    country: \"Iraq\",\n    coordinates: [33, 44],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 95,\n    country: \"Iceland\",\n    coordinates: [65, -18],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 96,\n    country: \"Israel\",\n    coordinates: [31.47, 35.13],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 97,\n    country: \"Italy\",\n    coordinates: [42.83333333, 12.83333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 98,\n    country: \"Jamaica\",\n    coordinates: [18.25, -77.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 99,\n    country: \"Jordan\",\n    coordinates: [31, 36],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 100,\n    country: \"Japan\",\n    coordinates: [36, 138],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 101,\n    country: \"Kazakhstan\",\n    coordinates: [48, 68],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 102,\n    country: \"Kenya\",\n    coordinates: [ 1, 38],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 103,\n    country: \"Kyrgyzstan\",\n    coordinates: [41, 75],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 104,\n    country: \"S. Korea\",\n    coordinates: [37, 127.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 105,\n    country: \"Kuwait\",\n    coordinates: [29.5, 45.75],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 106,\n    country: \"Lebanon\",\n    coordinates: [33.83333333, 35.83333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 107,\n    country: \"Liberia\",\n    coordinates: [6.5, -9.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 108,\n    country: \"Libya\",\n    coordinates: [25, 17],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 109,\n    country: \"Liechtenstein\",\n    coordinates: [47.26666666, 9.53333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 110,\n    country: \"Sri Lanka\",\n    coordinates: [7, 81],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 111,\n    country: \"Lesotho\",\n    coordinates: [-29.5, 28.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 112,\n    country: \"Lithuania\",\n    coordinates: [56, 24],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 113,\n    country: \"Luxembourg\",\n    coordinates: [49.75, 6.16666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 114,\n    country: \"Latvia\",\n    coordinates: [57, 25],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 115,\n    country: \"Morocco\",\n    coordinates: [32, -5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 116,\n    country: \"Monaco\",\n    coordinates: [43.73333333, 7.4],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 117,\n    country: \"Moldova\",\n    coordinates: [47, 29],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 118,\n    country: \"Madagascar\",\n    coordinates: [-20, 47],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 119,\n    country: \"Maldives\",\n    coordinates: [3.25, 73],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 120,\n    country: \"Mexico\",\n    coordinates: [23, -102],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 121,\n    country: \"Marshall Islands\",\n    coordinates: [9, 168],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 122,\n    country: \"Macedonia\",\n    coordinates: [41.83333333, 22],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 123,\n    country: \"Mali\",\n    coordinates: [17, -4],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 124,\n    country: \"Malta\",\n    coordinates: [35.83333333, 14.58333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 125,\n    country: \"Myanmar\",\n    coordinates: [22, 98],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 126,\n    country: \"Montenegro\",\n    coordinates: [42.5, 19.3],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 127,\n    country: \"Mongolia\",\n    coordinates: [46, 105],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 128,\n    country: \"Mozambique\",\n    coordinates: [-18.25, 35],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 129,\n    country: \"Mauritania\",\n    coordinates: [ 21, 10.9408],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 130,\n    country: \"Montserrat\",\n    coordinates: [16.75, -62.2],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 131,\n    country: \"Martinique\",\n    coordinates: [14.666667, -61],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 132,\n    country: \"Mauritius\",\n    coordinates: [-20.28333333, 57.55],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 133,\n    country: \"Malawi\",\n    coordinates: [-13.5, 34],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 134,\n    country: \"Malaysia\",\n    coordinates: [2.5, 112.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 135,\n    country: \"Mayotte\",\n    coordinates: [-12.83333333, 45.16666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 136,\n    country: \"Namibia\",\n    coordinates: [-22, 17],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 137,\n    country: \"New Caledonia\",\n    coordinates: [-21.5, 165.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 138,\n    country: \"Niger\",\n    coordinates: [16, 8],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 139,\n    country: \"Nigeria\",\n    coordinates: [10, 8],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 140,\n    country: \"Nicaragua\",\n    coordinates: [13, -85],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 140,\n    country: \"Netherlands\",\n    coordinates: [52.5, 5.75],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 141,\n    country: \"Norway\",\n    coordinates: [62, 10],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 142,\n    country: \"Nepal\",\n    coordinates: [28, 84],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 143,\n    country: \"New Zealand\",\n    coordinates: [-41, 174],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 144,\n    country: \"Oman\",\n    coordinates: [21, 57],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 145,\n    country: \"Pakistan\",\n    coordinates: [30, 70],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 146,\n    country: \"Panama\",\n    coordinates: [9, -80],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 147,\n    country: \"Peru\",\n    coordinates: [-10, -76],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 148,\n    country: \"Philippines\",\n    coordinates: [13, 122],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 149,\n    country: \"Papua New Guinea\",\n    coordinates: [-6, 147],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 150,\n    country: \"Poland\",\n    coordinates: [52, 20],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 150,\n    country: \"Portugal\",\n    coordinates: [39.5, -8],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 151,\n    country: \"Paraguay\",\n    coordinates: [-23, -58],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 152,\n    country: \"Palestine\",\n    coordinates: [31.9, 35.2],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 153,\n    country: \"French Polynesia\",\n    coordinates: [-15, -140],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 154,\n    country: \"Qatar\",\n    coordinates: [25.5, 51.25],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 155,\n    country: \"Romania\",\n    coordinates: [46, 25],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 156,\n    country: \"Russia\",\n    coordinates: [60, 100],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 157,\n    country: \"Rwanda\",\n    coordinates: [-2, 30],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 158,\n    country: \"Saudi Arabia\",\n    coordinates: [25, 45],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 159,\n    country: \"Sudan\",\n    coordinates: [15, 30],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 160,\n    country: \"Senegal\",\n    coordinates: [14, -14],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 160,\n    country: \"Singapore\",\n    coordinates: [1.36666666, 103.8],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 161,\n    country: \"Solomon Islands\",\n    coordinates: [-8, 159],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 162,\n    country: \"Sierra Leone\",\n    coordinates: [8.5, -11.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 163,\n    country: \"El Salvador\",\n    coordinates: [13.83333333, -88.91666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 164,\n    country: \"San Marino\",\n    coordinates: [43.76666666, 12.41666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 165,\n    country: \"Somalia\",\n    coordinates: [10, 49],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 166,\n    country: \"Saint Pierre Miquelon\",\n    coordinates: [46.83333333, -56.33333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 167,\n    country: \"Serbia\",\n    coordinates: [44, 21],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 168,\n    country: \"South Sudan\",\n    coordinates: [7, 30],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 169,\n    country: \"Suriname\",\n    coordinates: [4, -56],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 170,\n    country: \"Slovakia\",\n    coordinates: [48.66666666, 19.5],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 170,\n    country: \"Slovenia\",\n    coordinates: [46.11666666, 14.81666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 171,\n    country: \"Sweden\",\n    coordinates: [62, 15],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 172,\n    country: \"Sint Maarten\",\n    coordinates: [18.033333, -63.05],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 173,\n    country: \"Sint Maarten\",\n    coordinates: [18.033333, -63.05],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 174,\n    country: \"Seychelles\",\n    coordinates: [-4.58333333, 55.66666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 175,\n    country: \"Syria\",\n    coordinates: [35, 38],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 176,\n    country: \"Turks and Caicos\",\n    coordinates: [21.75, -71.58333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 177,\n    country: \"Chad\",\n    coordinates: [15, 19],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 178,\n    country: \"Togo\",\n    coordinates: [8, 1.16666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 179,\n    country: \"Thailand\",\n    coordinates: [15, 100],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 180,\n    country: \"Tajikistan\",\n    coordinates: [39, 71],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 180,\n    country: \"Timor-Leste\",\n    coordinates: [-8.83333333, 125.91666666],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 181,\n    country: \"Trinidad and Tobago\",\n    coordinates: [11, -61],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 182,\n    country: \"Tunisia\",\n    coordinates: [34, 9],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 183,\n    country: \"Turkey\",\n    coordinates: [39, 35],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 184,\n    country: \"Taiwan\",\n    coordinates: [23.5, 121],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 185,\n    country: \"Tanzania\",\n    coordinates: [-6, \n      35],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 186,\n    country: \"Uganda\",\n    coordinates: [1, 32],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 187,\n    country: \"Ukraine\",\n    coordinates: [49, 32],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 188,\n    country: \"Uruguay\",\n    coordinates: [-33, -56],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 189,\n    country: \"USA\",\n    coordinates: [38, -97],\n      color: \"green\",\n      value: 50\n  },\n  {\n    id: 190,\n    country: \"Uzbekistan\",\n    coordinates: [41, 64],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 191,\n    country: \"Vatican City\",\n    coordinates: [41.9, 12.45],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 192,\n    country: \"Venezuela\",\n    coordinates: [8, -66],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 193,\n    country: \"British Virgin Islands\",\n    coordinates: [18.431383, -64.62305],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 194,\n    country: \"Vietnam\",\n    coordinates: [16.16666666, 107.83333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 195,\n    country: \"Vanuatu\",\n    coordinates: [-16, 167],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 196,\n    country: \"Wallis and Futuna\",\n    coordinates: [-16, 167],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 197,\n    country: \"Samoa\",\n    coordinates: [-13.58333333, -172.33333333],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 198,\n    country: \"Yemen\",\n    coordinates: [15, 48],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 199,\n    country: \"South Africa\",\n    coordinates: [-29, 24],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 200,\n    country: \"Zambia\",\n    coordinates: [-15, 30],\n    color: \"green\",\n    value: 50\n  },\n  {\n    id: 201,\n    country: \"Zimbabwe\",\n    coordinates: [-20, 30],\n    color: \"green\",\n    value: 50\n  },\n\n];\n\n// module.exports = markers","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\Info.js",["102"],"import React from 'react'\n\nfunction Info(props) {\n  return (\n    <div className=\"info-container\">\n      <h1 className=\"info-title\">{props.country}</h1>\n\n      <table>\n        <tr>\n          <th></th>\n        </tr>\n        <tr>\n          <td className=\"info\">Cases:</td>\n          <td className=\"info info-data\">{props.infected}</td>\n        </tr>\n        <tr>\n          <td className=\"info\">Deaths:</td>\n          <td className=\"info\">{props.deaths}</td>\n        </tr>\n        <tr>\n          <td className=\"info\">Recoveries:</td>\n          <td className=\"info\">{props.recoveries}</td>\n        </tr>\n        <tr>\n          <td className=\"info\">Updated:</td>\n          <td className=\"info\">{props.updated}</td>\n        </tr>\n        <tr>\n          <td><p className=\"api-link\"><a className=\"api\" href=\"https://rapidapi.com/slotixsro-slotixsro-default/api/covid-19-tracking/endpoints\" target=\"_blank\" rel=\"noreffer\">API</a> </p></td>\n          \n        </tr>\n      </table>\n    </div>\n  )\n}\n\nexport default Info","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\News.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\utils\\API.js",["103"],"import axios from 'axios'\n\nconst BASEURL = \"https://api.covidtracking.com/v1/states/\"\n\nexport default {\n  getCovidData: function (state){\n    \n    return axios.get(BASEURL + state + \"/current.json\")\n  },\n\n  /*getWebSearch: function (){\n    return axios ({\n      method: 'GET',\n      url: 'https://contextualwebsearch-websearch-v1.p.rapidapi.com/api/search/NewsSearchAPI',\n      params: {\n        pageSize: '4',\n        q: 'covid-19',\n        autoCorrect: 'true',\n        pageNumber: '1',\n        toPublishedDate: 'null',\n        fromPublishedDate: 'null'\n      },\n      headers: {\n        'x-rapidapi-key': 'aa4bbfbbc6msh943bc8aba837399p1827ebjsnde6bed3202fa',\n        'x-rapidapi-host': 'contextualwebsearch-websearch-v1.p.rapidapi.com'\n      }\n    })\n  },*/\n    \n  getNews: function(){\n    return axios({\n      method: 'GET',\n      url: 'https://gnews.io/api/v4/search?q=covid&country=us&max=2&token=9e746013df81c5af1da62a1daa5e44d3'\n    })\n  },\n\n  getData: function () {\n    return axios({\n      method: 'GET',\n      url: 'https://covid-19-tracking.p.rapidapi.com/v1',\n      headers: {\n        'x-rapidapi-key': 'aa4bbfbbc6msh943bc8aba837399p1827ebjsnde6bed3202fa',\n        'x-rapidapi-host': 'covid-19-tracking.p.rapidapi.com'\n      }\n    })\n  },\n\n  getMarker: function () {\n    return axios.get(\"/api/marker\");\n  }\n}","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\Splashtext.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\Search.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\StateInfo.js",["104"],"import React from 'react'\n\nfunction StateInfo(props) {\n  return (\n    <div className=\"state-info\">\n      <table>\n        <tr>\n          <th></th>\n        </tr>\n        <tr>\n          <td className=\"info\">State:</td>\n          <td className=\"info\">{props.state}</td>\n        </tr>\n        <tr>\n          <td className=\"info\">Cases:</td>\n          <td className=\"info\">{props.positive}</td>\n        </tr>\n        <tr>\n          <td className=\"info\">Deaths:</td>\n          <td className=\"info\">{props.death}</td>\n        </tr>\n        <tr>\n          <td className=\"info\">Recoveries:</td>\n          <td className=\"info\">{props.recovered}</td>\n        </tr>\n        <tr>\n          <td className=\"info\">Updated:</td>\n          <td className=\"info info-updated\">{props.updated}</td>\n        </tr>\n        <tr>\n          <td><p className=\"api-link\"><a className=\"api\" href=\"https://covidtracking.com/data/api\" target=\"_blank\" rel=\"noreffer\">API</a> </p></td>\n          \n        </tr>\n      </table>\n  \n    </div>\n  )\n}\n\nexport default StateInfo","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\code2020\\pandemic-tracker-sans-splash\\client\\src\\components\\CDC.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\index.js",[],["105","106"],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\App.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\pages\\Globe.js",["107","108"],"import React, { useState, useEffect } from \"react\";\nimport ReactGlobe from \"react-globe\";\nimport \"tippy.js/dist/tippy.css\";\nimport \"tippy.js/animations/scale.css\";\nimport defaultMarkers from \"../../src/markers\";\nimport Info from \"../components/Info\";\nimport News from \"../components/News\";\nimport Search from \"../components/Search\";\nimport CDC from \"../components/CDC\";\nimport API from \"../utils/API\";\nimport { SolarSystemLoading } from \"react-loadingg\";\nimport AnimateOnChange from 'react-animate-on-change'\n\nfunction markerTooltipRenderer(marker) {\n  return `Country: ${marker.country}`;\n}\n\nfunction Globe() {\n  const markersData = [];\n\n  const options = {\n    markerTooltipRenderer,\n    ambientLightColor: \"red\",\n    globeGlowColor: \"blue\",\n    cameraDistanceRadiusScale: 4,\n    markerRadiusScaleRange: [0.01, 0.03],\n  };\n\n  const [loading, setLoading] = useState(false);\n\n  const [markers, setMarkers] = useState([]);\n\n  const [info, setInfo] = useState({\n    country: \"\",\n    infected: 0,\n    deaths: 0,\n    recoveries: 0,\n    updated: \"\",\n  });\n\n  const [animationSequence, setAnimationSequence] = useState();\n  let animations = [];\n  useEffect(() => {\n    loadData()\n    getNews()\n    getMongoDB()\n  }, [])\n\n  function formatCountryValues(covidCountryValue, countryName, covidColor) {\n    if (countryName) {\n      for (var i = 0; i < defaultMarkers.length; i++) {\n        if (defaultMarkers[i].country === countryName) {\n          const updatedMarkerObj = {\n            id: defaultMarkers[i].id,\n            country: defaultMarkers[i].country,\n            coordinates: defaultMarkers[i].coordinates,\n            color: covidColor,\n            value: covidCountryValue,\n          };\n          markersData.push(updatedMarkerObj);\n        }\n      }\n    }\n  }\n\n  function loadData() {\n    API.getData()\n      .then(function (response) {\n        const covidData = response.data;\n        for (var i = 0; i < covidData.length; i++) {\n          if (covidData[i][\"Total Cases_text\"]) {\n            const covidSize = parseFloat(\n              covidData[i][\"Total Cases_text\"].replace(/,/g, \"\")\n            );\n            // console.log(covidData[i][\"Total Cases_text\"])\n            if (covidSize > 0 && covidSize < 1000) {\n              // console.log(\"Between 0 and 100\")\n              const covidCountryValue = 10;\n              const covidColor = \"#ffffff\";\n              const countryName = covidData[i].Country_text;\n              formatCountryValues(covidCountryValue, countryName, covidColor);\n            } else if (covidSize > 1000 && covidSize < 100000) {\n              // console.log(\"Between 100 and 1,000\")\n              const covidCountryValue = 15;\n              const covidColor = \"#60bcc4\";\n              const countryName = covidData[i].Country_text;\n              formatCountryValues(covidCountryValue, countryName, covidColor);\n            } else if (covidSize > 100000 && covidSize < 1000000) {\n              // console.log(\"Between 1,000 and 10,000\")\n              const covidCountryValue = 20;\n              const covidColor = \"#005666\";\n              const countryName = covidData[i].Country_text;\n              formatCountryValues(covidCountryValue, countryName, covidColor);\n            } else if (covidSize > 1000000 && covidSize < 10000000) {\n              // console.log(\"Between 10,000 and 100,000\")\n              const covidCountryValue = 25;\n              const covidColor = \"#181f4c\";\n              const countryName = covidData[i].Country_text;\n              formatCountryValues(covidCountryValue, countryName, covidColor);\n            } else if (covidSize > 10000000) {\n              // console.log(\"Between 100,000 and 100,000\")\n              const covidCountryValue = 50;\n              const covidColor = \"#8e0000\";\n              const countryName = covidData[i].Country_text;\n              formatCountryValues(covidCountryValue, countryName, covidColor);\n            }\n          }\n          setInfo({\n            country: covidData[0].Country_text,\n            infected: covidData[0][\"Total Cases_text\"],\n            deaths: covidData[0][\"Total Deaths_text\"],\n            recoveries: covidData[0][\"Total Recovered_text\"],\n            updated: covidData[0][\"Last Update\"],\n          });\n        }\n        setMarkers(markersData);\n        setLoading(true);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }\n\n  function onClickMarker(markerObj) {\n    API.getData()\n      .then(function (response) {\n        const covidData = response.data;\n\n        setAnimationSequence(\"onclickMarker\");\n\n        for (var i = 0; i < covidData.length; i++) {\n          if (covidData[i].Country_text === markerObj.country) {\n            setInfo({\n              country: covidData[i].Country_text,\n              infected: covidData[i][\"Total Cases_text\"],\n              deaths: covidData[i][\"Total Deaths_text\"],\n              recoveries: covidData[i][\"Total Recovered_text\"],\n              updated: covidData[i][\"Last Update\"],\n            });\n          }\n        }\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }\n\n  const [getCovidNews, setGetCovidNews] = useState([]);\n  function getNews() {\n    API.getNews()\n      .then((response) => {\n        const newsData = response.data;\n        setGetCovidNews(newsData.articles);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }\n\n  function getMongoDB() {\n    API.getMarker()\n      .then((response) => {\n        const data = response.data;\n        // console.log(data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }\n\n  switch (animationSequence) {\n    case \"northAmerica\":\n      animations = [\n        {\n          coordinates: [38, -97],\n          focusAnimationDuration: 3000,\n          focusDistanceRadiusScale: 3,\n          focusEasingFunction: [\"Linear\", \"None\"],\n        },\n      ];\n      break;\n    case \"southAmerica\":\n      animations = [\n        {\n          coordinates: [-24, -47],\n          focusAnimationDuration: 3000,\n          focusDistanceRadiusScale: 3,\n          focusEasingFunction: [\"Linear\", \"None\"],\n        },\n      ];\n      break;\n    case \"europe\":\n      animations = [\n        {\n          coordinates: [54, -2],\n          focusAnimationDuration: 3000,\n          focusDistanceRadiusScale: 3,\n          focusEasingFunction: [\"Linear\", \"None\"],\n        },\n      ];\n      break;\n    case \"africa\":\n      animations = [\n        {\n          coordinates: [-1, 15],\n          focusAnimationDuration: 3000,\n          focusDistanceRadiusScale: 3,\n          focusEasingFunction: [\"Linear\", \"None\"],\n        },\n      ];\n      break;\n    case \"asia\":\n      animations = [\n        {\n          coordinates: [35, 105],\n          focusAnimationDuration: 3000,\n          focusDistanceRadiusScale: 3,\n          focusEasingFunction: [\"Linear\", \"None\"],\n        },\n      ];\n      break;\n    case \"australia\":\n      animations = [\n        {\n          coordinates: [-27, 133],\n          focusAnimationDuration: 3000,\n          focusDistanceRadiusScale: 3,\n          focusEasingFunction: [\"Linear\", \"None\"],\n        },\n      ];\n      break;\n    case \"antartica\":\n      animations = [\n        {\n          coordinates: [-70, 0],\n          focusAnimationDuration: 3000,\n          focusDistanceRadiusScale: 3,\n          focusEasingFunction: [\"Linear\", \"None\"],\n        },\n      ];\n      break;\n    case \"onclickMarker\":\n      animations = [];\n      break;\n    default:\n      // console.log(\"hello\");\n  }\n  return (\n    <div className=\"container-fluid col-12\">\n      {loading ? (\n        <>\n          {markers.length > 0 && (\n            <div className=\"globe globe-container\">\n              <div className=\"continents-container\">\n                <h2\n                  className=\"continent\"\n                  onClick={() => setAnimationSequence(\"northAmerica\")}\n                >\n                  North America\n                </h2>\n                <h2\n                  className=\"continent\"\n                  onClick={() => setAnimationSequence(\"southAmerica\")}\n                >\n                  South America\n                </h2>\n                <h2\n                  className=\"continent\"\n                  onClick={() => setAnimationSequence(\"europe\")}\n                >\n                  Europe\n                </h2>\n                <h2\n                  className=\"continent\"\n                  onClick={() => setAnimationSequence(\"africa\")}\n                >\n                  Africa\n                </h2>\n                <h2\n                  className=\"continent\"\n                  onClick={() => setAnimationSequence(\"asia\")}\n                >\n                  Asia\n                </h2>\n                <h2\n                  className=\"continent\"\n                  onClick={() => setAnimationSequence(\"australia\")}\n                >\n                  Australia\n                </h2>\n                <h2\n                  className=\"continent\"\n                  onClick={() => setAnimationSequence(\"antartica\")}\n                >\n                  Antarctica\n                </h2>\n              </div>\n\n              <ReactGlobe\n                markers={markers}\n                options={options}\n                onClickMarker={onClickMarker}\n                animations={animations}\n                height=\"120vh\"\n                className=\"react-globe\"\n              />\n              <Info\n                country={info.country}\n                infected={<AnimateOnChange animationClassName=\"info-fade\" animate={info.infected}>{info.infected}</AnimateOnChange>}\n                deaths={<AnimateOnChange animationClassName=\"info-fade\" animate={info.deaths}>{info.deaths}</AnimateOnChange>}\n                recoveries={<AnimateOnChange animationClassName=\"info-fade\" animate={info.recoveries}>{info.recoveries}</AnimateOnChange>}\n                updated={<AnimateOnChange animationClassName=\"info-fade\" animate={info.updated}>{info.updated}</AnimateOnChange>}\n              />\n\n              <Search />\n\n              <div className=\"news-container col-12\">\n                <div className=\"row\">\n                  {getCovidNews.map((article) => (\n                    <News {...article} key={article.title} />\n                  ))}\n                </div>\n              </div>\n\n              <CDC />\n            </div>\n          )}\n        </>\n      ) : (\n          <div className=\"loader\">\n            {\" \"}\n          (\n            <SolarSystemLoading color=\"#8e0000\" className=\"background\" />)\n          </div>\n        )}\n    </div>\n  );\n}\nexport default Globe;\n","C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\markers.js",["109"],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\Info.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\Search.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\News.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\CDC.js",[],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\utils\\API.js",["110"],"C:\\Users\\jared\\Desktop\\Coding Boot Camp\\jareds-folder\\covid19-pandemic-tracker\\client\\src\\components\\StateInfo.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":47,"column":6,"nodeType":"117","endLine":47,"endColumn":8,"suggestions":"118"},{"ruleId":"119","severity":1,"message":"120","line":4,"column":1,"nodeType":"121","endLine":1379,"endColumn":3},{"ruleId":"122","severity":1,"message":"123","line":30,"column":146,"nodeType":"124","endLine":30,"endColumn":161},{"ruleId":"119","severity":1,"message":"125","line":5,"column":1,"nodeType":"121","endLine":51,"endColumn":2},{"ruleId":"122","severity":1,"message":"123","line":32,"column":100,"nodeType":"124","endLine":32,"endColumn":115},{"ruleId":"111","replacedBy":"126"},{"ruleId":"113","replacedBy":"127"},{"ruleId":"115","severity":1,"message":"116","line":47,"column":6,"nodeType":"117","endLine":47,"endColumn":8,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":163,"column":15,"nodeType":"131","messageId":"132","endLine":163,"endColumn":19},{"ruleId":"119","severity":1,"message":"120","line":4,"column":1,"nodeType":"121","endLine":1379,"endColumn":3},{"ruleId":"119","severity":1,"message":"125","line":5,"column":1,"nodeType":"121","endLine":51,"endColumn":2},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["135"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","Assign object to a variable before exporting as module default",["133"],["134"],["136"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"137","fix":"139"},"Update the dependencies array to be: [loadData]",{"range":"140","text":"141"},{"range":"142","text":"141"},[1210,1212],"[loadData]",[1210,1212]]